
Du must dir 


@startuml qovaArchitecture 

package Course{

    class Course{

        - String name
        - int Semester
        - Type type
        - bytes QRCode
        - String optQuestion1
        - String optQuestion2
        - String optQuestion3

==

        'Constructor'
        + Course(String name, int Semester, Type type, QRCode qrCode, String optQuestion1, String optQuestion2, String optQuestion3)
        + Getter()       'for all attributes' 
        + Setter()       'for all attributes' 
        + getId()

    }





    class CourseController{
       
        - final CourseManagement courseManagement

==

            'Constructor'
        + CourseController(CourseManagement courseManagement) 
            'GetMapping method'
        + String courseDetails(Model model, Long id)
            'GetMapping method'
        + String createCourse(Model model, CourseForm form)         
            'PostMapping method to verify user input'                            
        + String createCourseValidation(Model model, CourseForm form, BindingResult result)
            'GetMapping method'
        + String editCourse(Model model, CourseForm form, Long id)
            'PostMapping method to validate user input'
        + String editCourseValidation(Model model, CourseForm form, Long id, BindingResult result)
            'GetMapping method. Survey wird allein anhand lehrveranstaltung kreiert. QR code Ã¼bergibt nur 
            'lehrveranstaltug.
        +String createSurvey(Model model)

    }





    class CourseManagement{
        - final CourseRepository courses

==

        + CourseManagement(CourseRepository courses)
        + add(Course course)
        + createCourse(CourseForm form)
        + deleteCourse(Long id)                             'if needed
        + updateCourse(Long id, CourseForm form)
        + 

    }




    class CourseForm {
    
        - String name
        - int Semester
        - Type type
        - bytes QRCode
        - String optQuestion1
        - String optQuestion2
        - String optQuestion3

==
        + String getName()
        + int getSemester()
        + Type getType()
        + bytes getQRCode()
        + String getOptQues1()
        + String getOptQues2()
        + String getOptQues3()

    }

    class Survey {
        'Not sure how to do this yet. Does this need the course and seperatly the optQuestions as 
        'attributes? optQuestion can be asserted based on Course, but for the purposes of the DataForm 
        'and repository these might need to be attributes. The other criteria i.e. the 5 questions that
        'are standard might also have to be attributes, so that they can be saved correctly
    }

    class SurveyForm {
        'All survey attributes'
    }

    interface CourseRepository {
        'if filtern is necessary, methods are added here'
    }

    interface SurveyRepository {
        'All findBy methods are added here. Will have to see how they want this filtered
        
        + Stream<Course>
        + Iterable<Evaluation> findBy...


    }

    enum Type {
        LECTURE
        TUTORIAL
        SEMINAR
    }


    'Relations'
    Type --* Course


}


'User Package. Need to think about security and so forth
package Users{
    class User{

    }

    class UserController{

    }

    class UserManagement{

    }

    class UserForm{

    }

    class UserRepository{

    }
}

@enduml